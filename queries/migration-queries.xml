<?xml version="1.0" encoding="UTF-8"?>
<migration>
  <!-- 전역 기본 설정 -->
  <settings>
    <!-- 데이터베이스 연결 설정 (dbinfo.json 참조) -->
    <sourceDatabase>sourceDB</sourceDatabase>
    <targetDatabase>targetDB</targetDatabase>
    <!-- 이관 기본 설정 -->
    <batchSize>${batchSize}</batchSize>
    <deleteBeforeInsert>true</deleteBeforeInsert>
  </settings>

  <!-- 전역 변수 정의 -->
  <variables>
    <var name="startDate">2024-01-01</var>
    <var name="endDate">2025-12-31</var>
    <var name="batchSize">1000</var>
    <var name="companyCode">COMPANY01</var>
    <var name="statusList">["ACTIVE", "PENDING", "APPROVED"]</var>
    <var name="departmentCodes">["IT", "HR", "SALES", "MARKETING"]</var>
    <var name="enableForeignKeyOrder">true</var>
    <var name="migrationTimestamp">${DATE.UTC:yyyy-MM-dd HH:mm:ss}</var>
    <var name="migrationUser">SYSTEM_MIGRATOR</var>
    <var name="migrationId">MG001</var>
    <!-- 현재 시각 함수 사용 예시 -->
    <var name="currentTimestamp">${DATE:yyyy-MM-dd HH:mm:ss}</var>
    <var name="currentDate">${DATE:yyyy-MM-dd}</var>
    <var name="currentTime">${DATE:HH:mm:ss}</var>
  </variables>

  <!-- 전역 컬럼 오버라이드 설정 -->
  <globalColumnOverrides>
    <!-- 모든 쿼리에 공통으로 적용될 컬럼 값들 -->
    <override column="processed_at">GETDATE()</override>
    <override column="data_version">2.1</override>
    <override column="payment_method">{"신용카드":"[신용카드]현대카드", "계좌이체":"[계좌이체]카카오뱅크"}</override>
    <override column="company_code">{"COMPANY01":"APPLE", "COMPANY02":"AMAZON", "COMPANY03":"GOOGLE", "COMPANY04":"TESLA"}</override>
    <override column="username">{"david.brown":"david","emily.davis":"emily","robert.miller":"robert","lisa.garcia":"lisa"}</override>
    <override column="email">{"david.brown@company.com":"david@gmail.com","emily.davis@company.com":"emily@gmail.com","robert.miller@company.com":"robert@gmail.com","lisa.garcia@company.com":"lisa@gmail.com"}</override>
  </globalColumnOverrides>

  <!-- 전역 전처리/후처리 그룹 -->
  <globalProcesses>
    <!-- 전체 이관 시작 전 실행 그룹들 -->
    <preProcessGroups>
     
      <group id="logging" description="마이그레이션 로그 초기화" enabled="true">
        <![CDATA[
          -- 마이그레이션 시작 로그
          INSERT INTO migration_log (query_id, phase, message, created_date)
          VALUES ('migrate_users', 'PRE_PROCESS', 'Migration started', GETDATE());
          
        ]]>
      </group>
      
      <group id="disable_foreign_keys" description="FK 제약조건 비활성화" enabled="true">
        <![CDATA[
          -- 임시로 외래키 제약조건 비활성화
          EXEC sp_MSforeachtable "ALTER TABLE ? NOCHECK CONSTRAINT all";
        ]]>
      </group>

      <group id="add_code_datas_for_test" description="테스트를 위한 코드데이터 추가" enabled="true">
        <![CDATA[
            INSERT INTO companies (company_code, company_name, address, phone, email, status) 
            VALUES
                    ('APPLE', 'APPLE', '1 Infinite Loop, Cupertino, CA 95014, USA', '02-6712-6770', 'info@apple.com', 'ACTIVE'),
                    ('AMAZON', 'AMAZON', '410 Terry Ave N, Seattle, WA 98109, USA', '02-206-266-1000', 'contact@amazon.com', 'ACTIVE'),
                    ('MICROSOFT', 'MICROSOFT', 'One Microsoft Way, Redmond, WA 98052, USA', '02-426-745-6000', 'support@microsoft.com', 'ACTIVE'),
                    ('TESLA', 'TESLA', '3500 Deer Creek Rd, Palo Alto, CA 94304, USA', '02-6712-6770', 'hello@tesla.com', 'INACTIVE'),
                    ('META', 'META', '1600 Amphitheatre Parkway, Mountain View, CA 94043, USA', '02-6712-6770', 'admin@meta.com', 'ACTIVE'),
                    ('GOOGLE', 'GOOGLE', '1600 Amphitheatre Parkway, Mountain View, CA 94043, USA', '02-6712-6770', 'admin@google.com', 'ACTIVE');
        ]]>
      </group>
    </preProcessGroups>
    
    <!-- 전체 이관 완료 후 실행 그룹들 -->
    <postProcessGroups>
      <group id="activate_foreign_keys" description="FK 제약조건 활성화" enabled="false">
        <![CDATA[
          -- 외래키 제약조건 다시 활성화
          EXEC sp_MSforeachtable "ALTER TABLE ? WITH CHECK CHECK CONSTRAINT all";
        ]]>
      </group>
      
      <group id="performance_restore" description="통계 정보 업데이트" enabled="true">
        <![CDATA[
          ALTER DATABASE ${targetDatabase} SET AUTO_UPDATE_STATISTICS ON;
          UPDATE STATISTICS users WITH FULLSCAN;
          UPDATE STATISTICS products WITH FULLSCAN;
        ]]>
      </group>
      
      <group id="completion" description="완료 로그" enabled="true">
        <![CDATA[
          -- 이관 완료 로그 기록
          INSERT INTO migration_log (query_id, status, message, rows_processed, created_date) 
          VALUES ('migrate_users', 'COMPLETED', 'Data migration completed successfully', 
                  (SELECT COUNT(*) FROM users WHERE created_date = '${migrationTimestamp}'), GETDATE());
          
        ]]>
      </group>
    </postProcessGroups>
  </globalProcesses>

  <!-- 동적 변수 정의 -->
  <dynamicVariables>
    <dynamicVar id="extract_active_user_ids" 
                description="활성 사용자 ID 목록 추출"
                variableName="activeUserIds"
                extractType="single_column"
                columnName="user_id"
                database="sourceDB"
                enabled="true">
      <![CDATA[
        SELECT user_id FROM users 
        WHERE status = 'ACTIVE' 
          AND user_id IS NOT NULL
        ORDER BY user_id
      ]]>
    </dynamicVar>

    <!-- key_value_pairs 사용 예시들 -->
    <dynamicVar id="extract_company_mapping"
                description="회사 코드-이름 매핑 추출" 
                variableName="companyMapping"
                extractType="key_value_pairs"
                database="sourceDB"
                enabled="false">
      <![CDATA[
        SELECT company_code, company_name FROM companies WHERE status = 'ACTIVE'
      ]]>
    </dynamicVar>

    <dynamicVar id="extract_department_mapping"
                description="부서 코드-이름 매핑 추출"
                variableName="departmentMapping"
                extractType="key_value_pairs"
                database="sourceDB"
                enabled="false">
      <![CDATA[
        SELECT DISTINCT department_code, department_name 
        FROM departments 
        WHERE is_active = 1
 
      ]]>
    </dynamicVar>

    <dynamicVar id="extract_status_mapping"
                description="상태 코드-설명 매핑 추출"
                variableName="statusMapping"
                extractType="key_value_pairs"
                database="sourceDB"
                enabled="false">
      <![CDATA[
        SELECT status_code, status_description 
        FROM status_codes 
        WHERE category = 'USER_STATUS'

      ]]>
    </dynamicVar>

    <dynamicVar id="extract_category_mapping"
                description="카테고리 ID-이름 매핑 추출"
                variableName="categoryMapping"
                extractType="key_value_pairs"
                database="sourceDB"
                enabled="false">
      <![CDATA[
        SELECT category_id, category_name 
        FROM categories 
        WHERE is_active = 1 
      ]]>
    </dynamicVar>

    <dynamicVar id="extract_max_order_id"
                description="최대 주문 ID 추출"
                variableName="maxOrderId"
                extractType="single_value"
                database="sampleDB"
                enabled="false">
      <![CDATA[
        SELECT MAX(OrderID) as max_id FROM orders
      ]]>
    </dynamicVar>

    <dynamicVar id="extract_category_products"
                description="특정 카테고리의 모든 상품 ID 추출"
                variableName="categoryProductIds"
                extractType="column_identified"
                columns="product_code,category_id"
                database="sourceDB"
                enabled="false">
      <![CDATA[
        SELECT product_code, category_id FROM products
      ]]>
    </dynamicVar>

    <!-- 추가 multiple_columns 사용 예시들 -->
    <dynamicVar id="extract_all_entity_ids"
                description="여러 테이블의 ID 값들을 하나의 배열로 통합 추출"
                variableName="allEntityIds"
                extractType="multiple_columns"
                columns="user_id,department_id,manager_id"
                database="sourceDB"
                enabled="false">
      <![CDATA[
        SELECT DISTINCT
          u.user_id,
          u.department_id,
          d.manager_id
        FROM users u
        LEFT JOIN departments d ON u.department_id = d.department_id
        WHERE u.status IN (${statusList})
          AND u.created_date >= '${startDate}'
          AND u.user_id IS NOT NULL
          AND u.department_id IS NOT NULL
          AND d.manager_id IS NOT NULL
      ]]>
    </dynamicVar>

    <!-- 방법 1: 개별 컬럼별 동적 변수 (각 컬럼을 개별적으로 식별 가능) -->
    <dynamicVar id="extract_approver_codes"
                description="승인자 코드만 추출"
                variableName="approverCodes"
                extractType="single_column"
                columnName="approver_code"
                database="sourceDB"
                enabled="false">
      <![CDATA[
        SELECT DISTINCT ar.approver_code
        FROM approval_requests ar
        WHERE ar.status IN (${statusList})
          AND ar.requested_date >= '${startDate}'
          AND ar.approver_code IS NOT NULL
      ]]>
    </dynamicVar>

    <dynamicVar id="extract_requester_codes"
                description="요청자 코드만 추출"
                variableName="requesterCodes"
                extractType="single_column"
                columnName="requester_code"
                database="sourceDB"
                enabled="false">
      <![CDATA[
        SELECT DISTINCT ar.requester_code
        FROM approval_requests ar
        WHERE ar.status IN (${statusList})
          AND ar.requested_date >= '${startDate}'
          AND ar.requester_code IS NOT NULL
      ]]>
    </dynamicVar>

    <dynamicVar id="extract_product_codes"
                description="제품 코드만 추출"
                variableName="productCodes"
                extractType="single_column"
                columnName="product_code"
                database="sourceDB"
                enabled="false">
      <![CDATA[
        SELECT DISTINCT ar.product_code
        FROM approval_requests ar
        WHERE ar.status IN (${statusList})
          AND ar.requested_date >= '${startDate}'
          AND ar.product_code IS NOT NULL
      ]]>
    </dynamicVar>

    <!-- 방법 2: 통합 추출 (기존 방식 유지) -->
    <dynamicVar id="extract_approval_codes"
                description="승인 관련 모든 코드들을 통합 추출 (컬럼 구분 불가)"
                variableName="allApprovalCodes"
                extractType="multiple_columns"
                columns="approver_code,requester_code,product_code"
                database="sourceDB"
                enabled="false">
      <![CDATA[
        SELECT DISTINCT 
          ar.approver_code,
          ar.requester_code,
          ar.product_code
        FROM approval_requests ar
        WHERE ar.status IN (${statusList})
          AND ar.requested_date >= '${startDate}'
          AND ar.approver_code IS NOT NULL
          AND ar.requester_code IS NOT NULL
          AND ar.product_code IS NOT NULL
      ]]>
    </dynamicVar>

    <!-- 방법 3: 컬럼별 식별 가능한 구조로 추출 (NEW!) -->
    <dynamicVar id="extract_approval_codes_identified"
                description="승인 관련 코드들을 컬럼별로 식별 가능하게 추출"
                variableName="approvalCodesById"
                extractType="column_identified"
                columns="approver_code,requester_code,product_code"
                database="sourceDB"
                enabled="false">
      <![CDATA[
        SELECT DISTINCT 
          ar.approver_code,
          ar.requester_code,
          ar.product_code
        FROM approval_requests ar
        WHERE ar.status IN (${statusList})
          AND ar.requested_date >= '${startDate}'
          AND ar.approver_code IS NOT NULL
          AND ar.requester_code IS NOT NULL
          AND ar.product_code IS NOT NULL
      ]]>
    </dynamicVar>
  </dynamicVariables>

  <queries>

    <!-- 카테고리 테이블 전체 데이터 이관 (SELECT * 사용) -->
    <query id="migrate_categories_all"
           description="카테리고리 테이블 전체 데이터 이관 (SELECT * 사용)"
           enabled="true">
      <sourceQuery targetTable="categories" 
                  targetColumns="*" 
                  identityColumns="category_id" 
                  applyGlobalColumns="none" 
                  deleteBeforeInsert="true">
        <![CDATA[
          SELECT *
          FROM categories 
        ]]>
      </sourceQuery>
    </query>

    <!-- 부서 테이블 전체 데이터 이관 (SELECT * 사용) -->
    <query id="migrate_departments_all"
           description="부서 테이블 전체 데이터 이관 (SELECT * 사용)"
           enabled="true">
      <sourceQuery targetTable="departments" 
                  targetColumns="*" 
                  identityColumns="department_code" 
                  applyGlobalColumns="none" 
                  deleteBeforeInsert="true">
        <![CDATA[
          SELECT *
          FROM departments 
        ]]>
      </sourceQuery>
    </query>

    <!-- 회사 테이블 전체 데이터 이관 (SELECT * 사용) -->
    <query id="migrate_companies_all"
           description="회사 테이블 전체 데이터 이관 (SELECT * 사용)"
           enabled="true">
      <sourceQuery targetTable="companies" 
                  targetColumns="*" 
                  identityColumns="company_code" 
                  applyGlobalColumns="none" 
                  deleteBeforeInsert="true">
        <![CDATA[
          SELECT *
          FROM companies 
        ]]>
      </sourceQuery>
    </query>


    <!-- 전/후처리 예시 쿼리 -->
    <query id="migrate_users_all"
           description="사용자 테이블 전체 데이터 이관 (SELECT * 사용)"
           enabled="true">

      <sourceQuery targetTable="users" 
                  targetColumns="*" 
                  identityColumns="user_id" 
                  applyGlobalColumns="none">
        <![CDATA[
          SELECT *
          FROM users 
 
        ]]>
      </sourceQuery>
    </query>
      
    <!-- 상품 테이블 전체 데이터 이관 (SELECT * 사용) -->
    <query id="migrate_products_all"
           description="상품 테이블 전체 데이터 이관 (SELECT * 사용)"
           enabled="true">
      <sourceQuery targetTable="products" 
                  targetColumns="*" 
                  identityColumns="product_code" 
                  applyGlobalColumns="none" 
                  deleteBeforeInsert="true">
        <![CDATA[
          SELECT *
          FROM products 
        ]]>
      </sourceQuery>
    </query>

    <!-- 주문 테이블 데이터 이관 (SQL 파일 사용) -->
    <query id="migrate_orders_from_file"
           description="주문 테이블 데이터 이관 (SQL 파일 사용)"
           enabled="true">
      <sourceQuery sourceQueryFile="sql/orders_migration.sql"
                  targetTable="orders"
                  targetColumns="*"
                  identityColumns="order_number">
      </sourceQuery>
    </query>

    <!-- 특정 상태의 상품 데이터 이관 (IN절 사용) -->
    <query id="migrate_products_by_status"
           description="특정 상태의 상품 데이터 이관 (IN절 사용)"
           enabled="false">
      <sourceQuery targetTable="products" 
                  targetColumns="*" 
                  identityColumns="product_code" 
                  applyGlobalColumns="data_version">
        <![CDATA[
          SELECT *
          FROM products 
          WHERE status IN (${statusList}) 
    
        ]]>
      </sourceQuery>

    </query>

    <!-- 특정 부서 직원 데이터 이관 (IN절 사용) -->
    <query id="migrate_employees_by_department"
           description="특정 부서 직원 데이터 이관 (IN절 사용)"
           enabled="true">
      <sourceQuery targetTable="employees" 
                  targetColumns="*" 
                  identityColumns="emp_code" 
                  applyGlobalColumns="all">
        <![CDATA[
          SELECT *
          FROM employees 
          WHERE department_code IN (${departmentCodes}) 
            AND hire_date >= '${startDate}' 
        
        ]]>
      </sourceQuery>
    </query>

    <!-- 상품 테이블 데이터 이관 (SQL 파일 + IN절 변수 사용) -->
    <query id="migrate_products_from_file_with_in"
           description="상품 테이블 데이터 이관 (SQL 파일 + IN절 변수 사용)"
           enabled="true">
      <sourceQuery sourceQueryFile="sql/products_in_clause_example.sql"
                  targetTable="products"
                  targetColumns="*"
                  identityColumns="product_code">
      </sourceQuery>
    </query>


    <!-- 고객 테이블 전체 데이터 이관 (SELECT * 사용) -->
    <query id="migrate_customers_all"
           description="고객 테이블 전체 데이터 이관 (SELECT * 사용)"
           enabled="true">
      <sourceQuery targetTable="customers" 
                  targetColumns="*" 
                  identityColumns="customer_id" 
                  applyGlobalColumns="all" 
                  deleteBeforeInsert="true">
        <![CDATA[
          SELECT *
          FROM customers 
        ]]>
      </sourceQuery>
    </query>


    <!-- 주문 테이블 전체 데이터 이관 (SELECT * 사용) -->
    <query id="migrate_orders_all"
           description="주문 테이블 전체 데이터 이관 (SELECT * 사용)"
           enabled="true">
      <sourceQuery targetTable="orders" 
                  targetColumns="*" 
                  identityColumns="order_number"
                  applyGlobalColumns="all">
        <![CDATA[
          SELECT *
          FROM orders 
        ]]>
      </sourceQuery>

    </query>

    <!-- 추출된 상품 관련 데이터 이관 (동적 변수 사용) -->
    <query id="migrate_related_products_dynamic"
           description="추출된 상품 관련 데이터 이관 (동적 변수 사용)"
           enabled="false">
      <sourceQuery targetTable="product_reviews" 
                  targetColumns="*" 
                  identityColumns="product_code,customer_id">
        <![CDATA[
          SELECT * 
          FROM product_reviews 
          WHERE product_code IN (${categoryProductIds.product_code}) 
            AND rating >= 4
        ]]>
      </sourceQuery>

    </query>

    <!-- multiple_columns 동적 변수 사용 예시 쿼리들 -->
    <query id="migrate_related_entities"
           description="multiple_columns로 추출된 모든 엔티티 ID를 사용한 관련 데이터 이관"
           enabled="false">
      <sourceQuery targetTable="entity_relationships" 
                  targetColumns="relation_id,entity_id,related_entity_id,relation_type,created_date" 
                  identityColumns="relation_id">
        <![CDATA[
          SELECT 
            relation_id,
            entity_id,
            related_entity_id,
            relation_type,
            created_date
          FROM entity_relationships 
          WHERE entity_id IN (${allEntityIds})
             OR related_entity_id IN (${allEntityIds})
          
        ]]>
      </sourceQuery>

    </query>

    <query id="migrate_audit_logs"
           description="감사 로그 이관"
           enabled="false">
      <sourceQuery targetTable="audit_logs" 
                  targetColumns="log_id,action_type,entity_code,user_code,log_message,created_date" 
                  identityColumns="log_id">
        <![CDATA[
          SELECT 
            log_id,
            action_type,
            entity_code,
            user_code,
            log_message,
            created_date
          FROM audit_logs 
     
        ]]>
      </sourceQuery>

    </query>

    <!-- 컬럼별 식별을 활용한 복합 쿼리 예시 -->
    <query id="migrate_complex_approval_relations"
           description="컬럼별 식별된 코드들을 사용한 복합 관계 데이터 이관"
           enabled="false">
      <sourceQuery targetTable="approval_relations" 
                  targetColumns="relation_id,approver_id,requester_id,product_code,relation_type,created_date" 
                  identityColumns="relation_id">
        <![CDATA[
          SELECT 
            ar.relation_id,
            ar.approver_id,
            ar.requester_id,
            ar.product_code,
            ar.relation_type,
            ar.created_date
          FROM approval_relations ar
          WHERE ar.approver_id IN (${approvalCodesById.approver_code})
            AND ar.requester_id IN (${approvalCodesById.requester_code})
            AND ar.product_code IN (${approvalCodesById.product_code})
            AND ar.created_date >= '${startDate}'
          UNION
          SELECT 
            ar2.relation_id,
            ar2.approver_id,
            ar2.requester_id,
            ar2.product_code,
            ar2.relation_type,
            ar2.created_date
          FROM approval_relations ar2
          WHERE (ar2.approver_id IN (${approvalCodesById}) 
             OR ar2.requester_id IN (${approvalCodesById}))
            AND ar2.created_date >= '${startDate}'

        ]]>
      </sourceQuery>

    </query>

    <!-- key_value_pairs 사용 예시 쿼리들 -->
    <query id="migrate_users_with_company_names"
           description="회사 코드-이름 매핑을 사용한 사용자 데이터 이관"
           enabled="false">
      <sourceQuery targetTable="users_with_company" 
                  targetColumns="user_id,username,email,company_code,company_name,created_date" 
                  identityColumns="user_id">
        <![CDATA[
          SELECT 
            u.user_id,
            u.username,
            u.email,
            u.company_code,
            -- key_value_pairs 매핑을 이용한 회사명 조회
            CASE u.company_code
              WHEN 'COMPANY01' THEN ${companyMapping.COMPANY01}
              WHEN 'COMPANY02' THEN ${companyMapping.COMPANY02}
              WHEN 'COMPANY03' THEN ${companyMapping.COMPANY03}
              ELSE 'Unknown Company'
            END as company_name,
            u.created_date
          FROM users u
          WHERE u.company_code IN (${companyMapping})
            AND u.created_date >= '${startDate}'

        ]]>
      </sourceQuery>

    </query>

    <query id="migrate_employees_with_dept_info"
           description="부서 매핑을 사용한 직원 정보 이관"
           enabled="false">
      <sourceQuery targetTable="employees_with_dept" 
                  targetColumns="emp_id,emp_name,dept_code,dept_name,status,status_desc,hire_date" 
                  identityColumns="emp_id">
        <![CDATA[
          SELECT 
            e.emp_id,
            e.emp_name,
            e.dept_code,
            -- 부서명 매핑
            COALESCE(${departmentMapping.${e.dept_code}}, 'Unknown Department') as dept_name,
            e.status,
            -- 상태 설명 매핑  
            COALESCE(${statusMapping.${e.status}}, 'Unknown Status') as status_desc,
            e.hire_date
          FROM employees e
          WHERE e.dept_code IN (${departmentMapping})
            AND e.status IN (${statusMapping})
            AND e.hire_date >= '${startDate}'

        ]]>
      </sourceQuery>

    </query>


    <!-- 활동 로그 테이블 전체 데이터 이관 (SELECT * 사용) -->
    <query id="migrate_activity_logs_all" 
           description="활동 로그 테이블 전체 데이터 이관 (SELECT * 사용)"
           enabled="true">
      <sourceQuery targetTable="activity_logs" 
                  targetColumns="*" 
                  identityColumns="log_id" 
                  applyGlobalColumns="all" 
                  deleteBeforeInsert="true">
        <![CDATA[
          SELECT *
          FROM activity_logs 
        ]]>
      </sourceQuery>
    </query>

  </queries>
</migration> 